import React from "react";
import {
    Button,Alert,Checkbox
  ,FormGroup,FormControl
} from "react-bootstrap";
import 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';
import config from '../../config';
import NavbarMenu from "../MenuComponents/NavbarMenu.js";
import {TextField} from "material-ui";
import RaisedButton from 'material-ui/RaisedButton';
import Dialog from 'material-ui/Dialog';
import {deepOrange500} from 'material-ui/styles/colors';
import FlatButton from 'material-ui/FlatButton';
import getMuiTheme from 'material-ui/styles/getMuiTheme';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';

const styles = {
  container: {
    textAlign: 'center',
    paddingTop: 200,
  },
};

const muiTheme = getMuiTheme({
  palette: {
    accent1Color: deepOrange500,
  },
});
export default class CreateActivity extends React.Component {
  constructor(props, context) {
      super(props, context);
      this.state = {
          groups: [],
          show: false,
          description: "",
          description: "Test Description",
          activityName: "Test",
          place: "",
          time: "",
          time: "2018.05.01 12:00",
          Banner:"name.jpg",
          Private:false,
          MaxParticipants: "",
          eventTag: false,
            open: false,
          showError: false
      };
          this.validateForm = this.validateForm.bind(this);
          this.handleRequestClose = this.handleRequestClose.bind(this);
          this.handleTouchTap = this.handleTouchTap.bind(this);
            this.handleSubmit = this.handleSubmit.bind(this);
            this.handleChange = this.handleChange.bind(this);

    }
  validateForm() {
      return this.state.activityName.length > 0 && this.state.place.length > 0;
  }
  handleRequestClose() {
    this.setState({
      open: false,
    });
  }

  handleTouchTap() {
    this.setState({
      open: true,
    });
  }
  handleChange = event => {
      this.setState({
          [event.target.id]: event.target.value
      });
      console.log(this.state);
  }

  handleSubmit = e => {
    e.preventDefault();

    fetch(config.apiPath + "/activity", {
      method: 'POST',
      body: JSON.stringify({
        Description: this.state.description,
        ActivityName: this.state.activityName,
        Activityname: this.state.activityName,
        Place: this.state.place,
        Time: this.state.time,
        EventTag: this.state.eventTag,
        Host: this.state.host,
        Eventtag: this.state.eventTag,
        Private: this.state.Private,
        Banner: this.state.Banner,
        MaxParticipants: this.state.MaxParticipants
      }),
      headers: {
          'Content-Type': 'application/json',
          'X-Access-Token': localStorage.getItem('apiToken')
        }
    }).then((res) => {
      if(res.status !== 201) {
          throw new Error("Invalid Entries");
      } else if(res.status !== 200) {
      } else if(res.status !== 201) {
          throw new Error("Forbidden");
      }
        return res;
    }).then(res => res.json()).then((res) => {
        //console.log("Token: " + res.token)

        if(typeof (Storage) !== "undefined") {
            localStorage.setItem("apiToken", res.token);
        } else {
            // TODO Code without local storage
        }

        this.props.history.push("/activity");
    }).catch((err) => {
        this.setState({
            errorPrompt: (<Alert bsStyle = "warning"> <strong> Holy guacamole ! </strong>
              Best check yo self, youre not looking too good. </Alert>)
        });
    });

  }

render() {

  const standardActions = (
    <FlatButton
      label="Ok"
      primary={true}
      onTouchTap={this.handleRequestClose}
    />
  );

    return(<MuiThemeProvider muiTheme={muiTheme}>
    <div><div>
                    {this.state.errorPrompt}
    </div>
    <TextField
      id="activityName" type="text" value={this.state.activityName} onChange={this.handleChange}
    defaultValue="Default Value"
    floatingLabelText="Floating Label Text"
    /><br />
    <TextField
      id="description" type="text" value={this.state.description} onChange={this.handleChange}
      defaultValue="Default Value"
      floatingLabelText="Floating Label Text"
    /><br />
    <TextField
      id="place" type="text" value={this.state.place} onChange={this.handleChange}
      defaultValue="Default Value"
      floatingLabelText="Floating Label Text"
    /><br />
    <TextField
      id="c" type="text" value={this.state.time} onChange={this.handleChange}
    defaultValue="Default Value"
    floatingLabelText="Floating Label Text"
  /><br />
  <TextField
    id="MaxParticipants" type="text" value={this.state.MaxParticipants} onChange={this.handleChange}
    defaultValue=ma"Default Value"
    floatingLabelText="Floating Label Text"
  /><br />
<RaisedButton  id="createBtn" label="Default" disabled={!this.validateForm()} onClick={this.handleSubmit()}/>
</div>
    </MuiThemeProvider>
    )
  }}