import React from 'react';
import config from '../config';

class CreateTeam extends React.Component {

	constructor(props) {
		super(props);

		this.inputName = this.inputName.bind(this);
		this.handleClick = this.handleClick.bind(this);

		this.state = {
			name: "",
			showError: false
		}
	}

	inputName(e) {
		this.setState({
			name: e.target.value
		});

		this.setState({
			showError: e.target.value === ""
		});
	}

	handleClick(e) {
		e.preventDefault();

		if(this.state.name !== "") {
			fetch(config.apiPath + "/team", {
				method: 'POST',
				body: JSON.stringify({
					Team_Id: null,
					Teamname: this.state.name,
					Teammanager: "Max"
				}),
				headers: {
					'Content-Type': 'application/json',
					'X-Access-Token': 'demo_token'
				}
			});
			console.log("Group '" + this.state.name + "' created.");
		}
		else {
			this.setState({showError: true});
		}
	}

	render() {
		return(
			<div style={{
				textAlign: 'center',
				marginTop: '5%',
				padding: '1%',
				border: '1px solid blue'
			}}>
				<h1>Gruppe anlegen: </h1>
				<p style={{color: 'red', visibility: this.state.showError?'visible':'hidden'}}>Bitte Gruppenname eingeben!</p>
				<form>
					<label>Name:</label>
					<input type="text" value={this.state.name} onChange={this.inputName} />
					<br />
					<button onClick={this.handleClick}>Gruppe erstellen</button>
				</form>
			</div>
		);
	}
}

export default CreateTeam;


import React from 'react';
import config from '../config';

class ListTeams extends React.Component {
	constructor(props) {
		super(props);
		this.state = {groups: []};
	}

	componentDidMount() {
		this.loadContent();
	}

	loadContent() { console.log(localStorage.getItem('apiToken'))
		fetch(config.apiPath + "/team", {
			headers: {
				'Content-Type': 'application/json',
				'X-Access-Token': localStorage.getItem('apiToken')
			}
		})
		.then((res) => {
			if(!res.ok) {
				throw new Error("Request failed.");
			}
			else if(res.status !== 200) {
				throw new Error("Forbidden");
			}
			else {
				return res;
			}
		})
		.then(res => res.json())
		.then(res => {
			this.setState({
				groups: res
			});
		})
		.catch((err) => {
			this.setState({
				groups: []
			});
		});
	}

	render() {
		let groups;

		if(this.state.groups.length === 0) {
			groups = (<p>Noch keine Gruppen vorhanden.</p>);
		}
		else {
			groups = (
				<ul>
				{this.state.groups.map((group) => {
					return (<li key={group.Team_Id}>{group.Team_Id + "; " + group.Teamname + ", " + group.Teammanager}</li>);
				})}
				</ul>
			);
		}

		return(
			<div style={{border: "2px solid black", margin: "5%"}}>
				<h1>Vorhandene Gruppen:</h1>
				{groups}
			</div>
		);
	}
}

export default ListTeams;